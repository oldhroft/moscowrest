[tool.poetry]
name = "src_rest"
version = "0.1.0"
description = "Moscow restoraunts"
authors = ["Ismail Gadzhiev <ismailgadzhievff@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.8,<4"
black = "^22.6.0"
mypy = "^0.971"
pandas = "^1.4.3"
pytest = "^7.1.2"
requests = "^2.28.1"
types-requests = "^2.28.9"
requests-mock = "^1.9.3"
click = "^8.1.3"
pytest-cov = "^3.0.0"
snakemake = "^7.13.0"
beautifulsoup4 = "^4.11.1"
joblib = "^1.1.0"
natasha = "^1.4.0"
dostoevsky = "^0.6.0"

[tool.poetry.dev-dependencies]
jupyter = "^1.0.0"
matplotlib = "^3.5.3"
natasha = "^1.4.0"
types-beautifulsoup4 = "^4.11.5"
scikit-learn = "^1.1.2"
catboost = "^1.0.6"
openpyxl = "^3.0.10"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true

[tool.poetry.scripts]
load_mosdata = "src_rest.loaders.data_loaders_api:load_mosdata"
load_sentiment = "src_rest.loaders.data_loaders_api:load_sentiment"
concat_data = "src_rest.transformers.transform:concat_data"
process_mosdata = "src_rest.transformers.transform_mosdata:process_mosdata"
mosdata_datamart = "src_rest.transformers.transform_mosdata:mosdata_datamart"
load_moscow_restaurants = "src_rest.loaders.data_loaders_scrapy:load_moscow_restaurants"
load_moscow_restaurants_det = "src_rest.loaders.data_loaders_scrapy:load_moscow_restaurants_detailed"
process_mos_rest = "src_rest.transformers.transform_mos_rest:process_mos_rest"
process_mos_rest_detailed = "src_rest.transformers.transform_mos_rest:process_mos_rest_detailed"
mos_rest_datamart = "src_rest.transformers.transform_mos_rest:mos_rest_datamart"
create_text_features = "src_rest.transformers.transform:create_text_features"
create_aspects = "src_rest.transformers.transform:create_aspects"
transform_sentiments ="src_rest.transformers.transform:transform_sentiments"
train_sentiment_model = "src_rest.models.models:train_sentiment_model"

[tool.pytest.ini_options]
addopts = "--cov-report xml:coverage-reports/coverage.xml --cov-report=term-missing --cov=src_rest --cov-report=html"

[tool.coverage.run]
omit = ['src/src_rest/tests/*']
source = ['.']